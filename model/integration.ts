/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PricePolicyDto } from './pricePolicyDto';

/**
* Details of the integration
*/
export class Integration {
    /**
    * The unique identifier of the service integration.
    */
    'id'?: string;
    /**
    * The title of the service integration.
    */
    'title': string;
    /**
    * The type of the service integration.
    */
    'type': Integration.TypeEnum;
    /**
    * An array that holds the events that this service integration will listen to.
    */
    'listenEvents': Array<Integration.ListenEventsEnum>;
    /**
    * Indicates whether the integration is public or not.
    */
    'isPublic'?: boolean = false;
    /**
    * Indicates whether the integration is email integration or not.
    */
    'isEmailIntegration'?: boolean = false;
    /**
    * A token used for authentication and authorization.
    */
    'token'?: string;
    /**
    * Service integration\'s url
    */
    'url': string;
    /**
    * An array that holds all the price policies for the integration.
    */
    'prices'?: Array<PricePolicyDto>;
    /**
    * An array of IP addresses that are allowed to access the resource.
    */
    'allowedIps'?: Array<string>;
    /**
    * An array of Top-Level Domain (TLD) identifiers.
    */
    'tldIds'?: Array<string>;
    /**
    * The category to which the product belongs.
    */
    'productCategory'?: Integration.ProductCategoryEnum;
    /**
    * The date that the maintenance will occur.
    */
    'maintenanceStartDate'?: Date;
    /**
    * The date that the maintenance will end.
    */
    'maintenanceEndDate'?: Date;
    /**
    * The date and time when the service integration was created.
    */
    'createdAt'?: Date;
    /**
    * The date and time when the service integration was updated.
    */
    'updatedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Integration.TypeEnum"
        },
        {
            "name": "listenEvents",
            "baseName": "listenEvents",
            "type": "Array<Integration.ListenEventsEnum>"
        },
        {
            "name": "isPublic",
            "baseName": "isPublic",
            "type": "boolean"
        },
        {
            "name": "isEmailIntegration",
            "baseName": "isEmailIntegration",
            "type": "boolean"
        },
        {
            "name": "token",
            "baseName": "token",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "prices",
            "baseName": "prices",
            "type": "Array<PricePolicyDto>"
        },
        {
            "name": "allowedIps",
            "baseName": "allowedIps",
            "type": "Array<string>"
        },
        {
            "name": "tldIds",
            "baseName": "tldIds",
            "type": "Array<string>"
        },
        {
            "name": "productCategory",
            "baseName": "productCategory",
            "type": "Integration.ProductCategoryEnum"
        },
        {
            "name": "maintenanceStartDate",
            "baseName": "maintenanceStartDate",
            "type": "Date"
        },
        {
            "name": "maintenanceEndDate",
            "baseName": "maintenanceEndDate",
            "type": "Date"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return Integration.attributeTypeMap;
    }
}

export namespace Integration {
    export enum TypeEnum {
        Product = <any> 'product',
        Registry = <any> 'registry',
        Application = <any> 'application',
        Dns = <any> 'dns',
        Payment = <any> 'payment',
        Notification = <any> 'notification',
        Invoice = <any> 'invoice'
    }
    export enum ListenEventsEnum {
        UserCreated = <any> 'user/created',
        UserUpdated = <any> 'user/updated',
        UserDeleted = <any> 'user/deleted',
        UserBanned = <any> 'user/banned',
        UserUnbanned = <any> 'user/unbanned',
        UserCompanyAccessAdded = <any> 'user/company/access/added',
        UserCompanyAccessRemoved = <any> 'user/company/access/removed',
        UserLocked = <any> 'user/locked',
        UserCreditBalanceUpdated = <any> 'user/credit-balance/updated',
        UserUnlocked = <any> 'user/unlocked',
        UserPasswordUpdated = <any> 'user/password/updated',
        UserEmailUpdated = <any> 'user/email/updated',
        UserCurrencyUpdated = <any> 'user/currency/updated',
        UserInvoiceContactUpdated = <any> 'user/invoice-contact/updated',
        UserPolicyUpdated = <any> 'user/policy/updated',
        UserLanguagesUpdated = <any> 'user/languages/updated',
        UserCustomPricePoliciesUpdated = <any> 'user/custom-price-policies/updated',
        UserCustomAddonPricePoliciesUpdated = <any> 'user/custom-addon-price-policies/updated',
        UserCustomAffiliateAdded = <any> 'user/custom-affiliate/added',
        UserCustomAffiliateRemoved = <any> 'user/custom-affiliate/removed',
        UserInvoiceIntervalUpdated = <any> 'user/invoice-interval/updated',
        UserAdditionalNotificationEmailRemoved = <any> 'user/additional-notification-email/removed',
        UserAdditionalNotificationEmailAdded = <any> 'user/additional-notification-email/added',
        UserCommentAdded = <any> 'user/comment/added',
        UserCommentRemoved = <any> 'user/comment/removed',
        UserCommentUpdated = <any> 'user/comment/updated',
        UserTagsUpdated = <any> 'user/tags/updated',
        UserSettingAdded = <any> 'user/setting/added',
        UserSettingRemoved = <any> 'user/setting/removed',
        UserSettingUpdated = <any> 'user/setting/updated',
        UserStartSelling = <any> 'user/start-selling',
        UserRolesUpdated = <any> 'user/roles/updated',
        MessageCreated = <any> 'message/created',
        MessageUpdated = <any> 'message/updated',
        MessageDeleted = <any> 'message/deleted',
        NotificationSent = <any> 'notification/sent',
        PolicyCreated = <any> 'policy/created',
        PolicyUpdated = <any> 'policy/updated',
        PolicyDeleted = <any> 'policy/deleted',
        ProductCategoryCreated = <any> 'product-category/created',
        ProductCategoryUpdated = <any> 'product-category/updated',
        ProductCategoryDeleted = <any> 'product-category/deleted',
        InvoiceContactCreated = <any> 'invoice-contact/created',
        InvoiceContactUpdated = <any> 'invoice-contact/updated',
        InvoiceContactDeleted = <any> 'invoice-contact/deleted',
        InvoiceCreated = <any> 'invoice/created',
        InvoiceUpdated = <any> 'invoice/updated',
        InvoiceDeleted = <any> 'invoice/deleted',
        CurrencyCreated = <any> 'currency/created',
        CurrencyUpdated = <any> 'currency/updated',
        CurrencyDeleted = <any> 'currency/deleted',
        AffiliateCreated = <any> 'affiliate/created',
        AffiliateUpdated = <any> 'affiliate/updated',
        AffiliateDeleted = <any> 'affiliate/deleted',
        CompanyCreated = <any> 'company/created',
        CompanyUpdated = <any> 'company/updated',
        CompanyDeleted = <any> 'company/deleted',
        OrganizationIntegrationAttached = <any> 'organization/integration/attached',
        OrganizationIntegrationDetached = <any> 'organization/integration/detached',
        TldCreated = <any> 'tld/created',
        TldUpdated = <any> 'tld/updated',
        TldDeleted = <any> 'tld/deleted',
        IntegrationCreated = <any> 'integration/created',
        IntegrationUpdated = <any> 'integration/updated',
        IntegrationDeleted = <any> 'integration/deleted',
        IntegrationInstalled = <any> 'integration/installed',
        IntegrationUninstalled = <any> 'integration/uninstalled',
        DomainContactCreated = <any> 'domain-contact/created',
        DomainContactUpdated = <any> 'domain-contact/updated',
        DomainContactDeleted = <any> 'domain-contact/deleted',
        DomainCategoryCreated = <any> 'domain-category/created',
        DomainCategoryUpdated = <any> 'domain-category/updated',
        DomainCategoryDeleted = <any> 'domain-category/deleted',
        AddonCreated = <any> 'addon/created',
        AddonUpdated = <any> 'addon/updated',
        AddonDeleted = <any> 'addon/deleted',
        PaymentCreated = <any> 'payment/created',
        PaymentCanceled = <any> 'payment/canceled',
        PaymentFailed = <any> 'payment/failed',
        PaymentSubscribed = <any> 'payment/subscribed',
        PaymentUnsubscribed = <any> 'payment/unsubscribed',
        PaymentUpdated = <any> 'payment/updated',
        PaymentDeleted = <any> 'payment/deleted',
        PaymentCompleted = <any> 'payment/completed',
        TemplateCreated = <any> 'template/created',
        TemplateUpdated = <any> 'template/updated',
        TemplateDeleted = <any> 'template/deleted',
        CouponCreated = <any> 'coupon/created',
        CouponUpdated = <any> 'coupon/updated',
        CouponDeleted = <any> 'coupon/deleted',
        TemplateIntegrationCreated = <any> 'template-integration/created',
        TemplateIntegrationUpdated = <any> 'template-integration/updated',
        TemplateIntegrationDeleted = <any> 'template-integration/deleted',
        OrderCreated = <any> 'order/created',
        OrderStatusInProgress = <any> 'order/status/in-progress',
        OrderStatusCompleted = <any> 'order/status/completed',
        OrderStatusCanceled = <any> 'order/status/canceled',
        OrderStatusRefunded = <any> 'order/status/refunded',
        OrderInsufficientBalance = <any> 'order/insufficient-balance',
        OrderUpdated = <any> 'order/updated',
        OrderDeleted = <any> 'order/deleted',
        SettingCreated = <any> 'setting/created',
        SettingUpdated = <any> 'setting/updated',
        SettingDeleted = <any> 'setting/deleted',
        IssueCreated = <any> 'issue/created',
        IssueUpdated = <any> 'issue/updated',
        IssueDeleted = <any> 'issue/deleted',
        TaskCreated = <any> 'task/created',
        TaskUpdated = <any> 'task/updated',
        TaskDeleted = <any> 'task/deleted',
        TaskCanceled = <any> 'task/canceled',
        TaskInProgress = <any> 'task/in-progress',
        TaskCompleted = <any> 'task/completed',
        TaskPercentageUpdated = <any> 'task/percentage/updated',
        ProductCreated = <any> 'product/created',
        ProductUpdated = <any> 'product/updated',
        ProductDeleted = <any> 'product/deleted',
        ProductAutoRenewUpdated = <any> 'product/auto-renew/updated',
        ProductEnabled = <any> 'product/enabled',
        ProductDisabled = <any> 'product/disabled',
        ProductVersionCreated = <any> 'product/version-created',
        IpGroupCreated = <any> 'ip-group/created',
        IpGroupUpdated = <any> 'ip-group/updated',
        IpGroupDeleted = <any> 'ip-group/deleted',
        IpCreated = <any> 'ip/created',
        IpUpdated = <any> 'ip/updated',
        IpDeleted = <any> 'ip/deleted',
        DomainNameCreated = <any> 'domain-name/created',
        DomainNameUpdated = <any> 'domain-name/updated',
        DomainNameDeleted = <any> 'domain-name/deleted',
        DomainNameLocked = <any> 'domain-name/locked',
        DomainNameUnlocked = <any> 'domain-name/unlocked',
        DomainNameIdshieldActivated = <any> 'domain-name/idshield-activated',
        DomainNameIdshieldDeactivated = <any> 'domain-name/idshield-deactivated',
        DomainNameBundleAdded = <any> 'domain-name/bundle-added',
        DomainNameBundleRemoved = <any> 'domain-name/bundle-removed',
        DomainNameRegistrantUpdated = <any> 'domain-name/registrant-updated',
        DomainNameAdminUpdated = <any> 'domain-name/admin-updated',
        DomainNameTechUpdated = <any> 'domain-name/tech-updated',
        DomainNameBillingUpdated = <any> 'domain-name/billing-updated',
        DomainNameAdditionalUpdated = <any> 'domain-name/additional-updated',
        ItemCreated = <any> 'item/created',
        ItemUpdated = <any> 'item/updated',
        ItemDeleted = <any> 'item/deleted',
        ItemRenewed = <any> 'item/renewed',
        ItemUpgraded = <any> 'item/upgraded',
        ItemDowngraded = <any> 'item/downgraded',
        ItemIpAttached = <any> 'item/ip-attached',
        ItemIpDetached = <any> 'item/ip-detached',
        ItemDetachedFromOrder = <any> 'item/detached-from-order',
        ItemPostponed = <any> 'item/postponed',
        ItemTransferredIn = <any> 'item/transferred-in',
        ItemCanceled = <any> 'item/canceled',
        ItemSuspended = <any> 'item/suspended',
        ItemUnsuspended = <any> 'item/unsuspended',
        ItemAffiliateAdded = <any> 'item/affiliate/added',
        ItemBundleAttached = <any> 'item/bundle/attached',
        ItemBundleDetached = <any> 'item/bundle/detached',
        ItemActivated = <any> 'item/activated',
        ItemSetInactive = <any> 'item/set-inactive',
        ItemProcessed = <any> 'item/processed',
        OrderPaid = <any> 'order/paid',
        Test = <any> 'test'
    }
    export enum ProductCategoryEnum {
        Ssl = <any> 'SSL',
        Vps = <any> 'VPS',
        Dedicated = <any> 'DEDICATED',
        WebHosting = <any> 'WEB HOSTING',
        Other = <any> 'OTHER'
    }
}
