/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CouponTypeDto } from './couponTypeDto';

export class CouponProductsDto {
    /**
    * An array of product IDs where the coupon will apply.
    */
    'productds'?: Array<string>;
    /**
    * Indicates whether the coupon can be applied to only one Item per order.
    */
    'oneProductPerOrder': boolean;
    /**
    * Select all durations that the coupon can be applied to.
    */
    'appliedOnDurations': Array<CouponProductsDto.AppliedOnDurationsEnum>;
    /**
    * Select the action where the coupon will apply.
    */
    'appliedOnActions': CouponProductsDto.AppliedOnActionsEnum;
    /**
    * If true, the coupon is applied to any addons that apply to the item. If false addons price is not affected by the coupon
    */
    'appliedOnAddons'?: boolean = false;
    /**
    * The type of coupon associated with the product.
    */
    'couponType': CouponTypeDto;
    /**
    * The total number of times a coupon can be applied.
    */
    'timesCanBeAppliedTotal'?: number;
    /**
    * The number of times a coupon can be applied per user.
    */
    'timesCanBeAppliedPerUser'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "productds",
            "baseName": "productÎ™ds",
            "type": "Array<string>"
        },
        {
            "name": "oneProductPerOrder",
            "baseName": "oneProductPerOrder",
            "type": "boolean"
        },
        {
            "name": "appliedOnDurations",
            "baseName": "appliedOnDurations",
            "type": "Array<CouponProductsDto.AppliedOnDurationsEnum>"
        },
        {
            "name": "appliedOnActions",
            "baseName": "appliedOnActions",
            "type": "CouponProductsDto.AppliedOnActionsEnum"
        },
        {
            "name": "appliedOnAddons",
            "baseName": "appliedOnAddons",
            "type": "boolean"
        },
        {
            "name": "couponType",
            "baseName": "couponType",
            "type": "CouponTypeDto"
        },
        {
            "name": "timesCanBeAppliedTotal",
            "baseName": "timesCanBeAppliedTotal",
            "type": "number"
        },
        {
            "name": "timesCanBeAppliedPerUser",
            "baseName": "timesCanBeAppliedPerUser",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CouponProductsDto.attributeTypeMap;
    }
}

export namespace CouponProductsDto {
    export enum AppliedOnDurationsEnum {
        _1 = <any> '1',
        _2 = <any> '2',
        _3 = <any> '3',
        _4 = <any> '4',
        _5 = <any> '5',
        _6 = <any> '6',
        _7 = <any> '7',
        _8 = <any> '8',
        _9 = <any> '9',
        _10 = <any> '10',
        _11 = <any> '11',
        _12 = <any> '12',
        _24 = <any> '24',
        _36 = <any> '36',
        _48 = <any> '48',
        _60 = <any> '60',
        _72 = <any> '72',
        _84 = <any> '84',
        _96 = <any> '96',
        _108 = <any> '108',
        _120 = <any> '120'
    }
    export enum AppliedOnActionsEnum {
        Create = <any> 'CREATE',
        Renew = <any> 'RENEW',
        Setup = <any> 'SETUP'
    }
}
