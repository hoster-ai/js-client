/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AddonOptionsDto } from './addonOptionsDto';
import { MultilangTextDto } from './multilangTextDto';
import { PricePolicyDto } from './pricePolicyDto';

export class AddonDto {
    /**
    * The unique identifier of the addon.
    */
    'id': string;
    /**
    * The name of the addon.
    */
    'name': string;
    /**
    * An array of the addon title in all supported languages.
    */
    'title': Array<MultilangTextDto>;
    /**
    * An array that holds a brief text that describes the addon in all supported languages.
    */
    'description': Array<MultilangTextDto>;
    /**
    * A url that holds the icon of the addon.
    */
    'iconUrl': string;
    /**
    * An enum that describes the type of the addon.
    */
    'type': AddonDto.TypeEnum;
    /**
    * Indicates if the addon is required or not.
    */
    'required': boolean;
    /**
    * Indicate if the addon is active or not.
    */
    'active': boolean;
    /**
    * An array that holds all the price policies applied to the addon.
    */
    'pricePolicies'?: Array<PricePolicyDto>;
    /**
    * An array that holda all the options for the addon.
    */
    'options'?: Array<AddonOptionsDto>;
    /**
    * Indicates if the addon can be deleted or not.
    */
    'deletable': boolean;
    /**
    * Indicates if the addon is able to be eddited or not.
    */
    'editable': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "Array<MultilangTextDto>"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "Array<MultilangTextDto>"
        },
        {
            "name": "iconUrl",
            "baseName": "icon_url",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "AddonDto.TypeEnum"
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean"
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean"
        },
        {
            "name": "pricePolicies",
            "baseName": "pricePolicies",
            "type": "Array<PricePolicyDto>"
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "Array<AddonOptionsDto>"
        },
        {
            "name": "deletable",
            "baseName": "deletable",
            "type": "boolean"
        },
        {
            "name": "editable",
            "baseName": "editable",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return AddonDto.attributeTypeMap;
    }
}

export namespace AddonDto {
    export enum TypeEnum {
        TextBox = <any> 'TEXT_BOX',
        TextArea = <any> 'TEXT_AREA',
        List = <any> 'LIST',
        RadioBox = <any> 'RADIO_BOX',
        Checkbox = <any> 'CHECKBOX',
        Slider = <any> 'SLIDER'
    }
}
