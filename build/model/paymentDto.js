"use strict";
/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentDto = void 0;
class PaymentDto {
    constructor() {
        /**
        * The status of the payment.
        */
        this['status'] = PaymentDto.StatusEnum.Pending;
    }
    static getAttributeTypeMap() {
        return PaymentDto.attributeTypeMap;
    }
}
exports.PaymentDto = PaymentDto;
PaymentDto.discriminator = undefined;
PaymentDto.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "paymentType",
        "baseName": "paymentType",
        "type": "PaymentDto.PaymentTypeEnum"
    },
    {
        "name": "transactionType",
        "baseName": "transactionType",
        "type": "PaymentDto.TransactionTypeEnum"
    },
    {
        "name": "userId",
        "baseName": "userId",
        "type": "string"
    },
    {
        "name": "companyId",
        "baseName": "companyId",
        "type": "string"
    },
    {
        "name": "fullName",
        "baseName": "fullName",
        "type": "string"
    },
    {
        "name": "orderId",
        "baseName": "orderId",
        "type": "string"
    },
    {
        "name": "integration",
        "baseName": "integration",
        "type": "IntegrationDto"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "PaymentDto.StatusEnum"
    },
    {
        "name": "value",
        "baseName": "value",
        "type": "number"
    },
    {
        "name": "fee",
        "baseName": "fee",
        "type": "number"
    },
    {
        "name": "usedByOrderIds",
        "baseName": "usedByOrderIds",
        "type": "Array<string>"
    },
    {
        "name": "remainingBalance",
        "baseName": "remainingBalance",
        "type": "number"
    },
    {
        "name": "meta",
        "baseName": "meta",
        "type": "object"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "Date"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "Date"
    }
];
(function (PaymentDto) {
    let PaymentTypeEnum;
    (function (PaymentTypeEnum) {
        PaymentTypeEnum[PaymentTypeEnum["Order"] = 'ORDER'] = "Order";
        PaymentTypeEnum[PaymentTypeEnum["Credits"] = 'CREDITS'] = "Credits";
    })(PaymentTypeEnum = PaymentDto.PaymentTypeEnum || (PaymentDto.PaymentTypeEnum = {}));
    let TransactionTypeEnum;
    (function (TransactionTypeEnum) {
        TransactionTypeEnum[TransactionTypeEnum["Withdraw"] = 'WITHDRAW'] = "Withdraw";
        TransactionTypeEnum[TransactionTypeEnum["Deposit"] = 'DEPOSIT'] = "Deposit";
    })(TransactionTypeEnum = PaymentDto.TransactionTypeEnum || (PaymentDto.TransactionTypeEnum = {}));
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["Pending"] = 'PENDING'] = "Pending";
        StatusEnum[StatusEnum["Processing"] = 'PROCESSING'] = "Processing";
        StatusEnum[StatusEnum["Completed"] = 'COMPLETED'] = "Completed";
        StatusEnum[StatusEnum["Cancel"] = 'CANCEL'] = "Cancel";
        StatusEnum[StatusEnum["Error"] = 'ERROR'] = "Error";
    })(StatusEnum = PaymentDto.StatusEnum || (PaymentDto.StatusEnum = {}));
})(PaymentDto || (exports.PaymentDto = PaymentDto = {}));
