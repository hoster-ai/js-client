/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class TaskDto {
    /**
    * The unique identifier of the task.
    */
    'id'?: string;
    /**
    * A description of the task.
    */
    'description': string;
    /**
    * The unique identifier of the integration the task created from.
    */
    'createdFromIntegrationId'?: string;
    /**
    * The action a task contains.
    */
    'action'?: TaskDto.ActionEnum;
    /**
    * The status of the task.
    */
    'status'?: TaskDto.StatusEnum;
    /**
    * The type of event related to a service integration\'s operations.
    */
    'integrationHandler'?: TaskDto.IntegrationHandlerEnum;
    /**
    * Date task started.
    */
    'startedDate'?: Date;
    /**
    * Date the task completed
    */
    'completedDate'?: Date;
    /**
    * The completion percentage of the task action, represented as a number between 0 and 100.
    */
    'completePercentage'?: number;
    /**
    * Any payload returned with the task complition.
    */
    'payload'?: object;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "createdFromIntegrationId",
            "baseName": "createdFromIntegrationId",
            "type": "string"
        },
        {
            "name": "action",
            "baseName": "action",
            "type": "TaskDto.ActionEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TaskDto.StatusEnum"
        },
        {
            "name": "integrationHandler",
            "baseName": "integrationHandler",
            "type": "TaskDto.IntegrationHandlerEnum"
        },
        {
            "name": "startedDate",
            "baseName": "startedDate",
            "type": "Date"
        },
        {
            "name": "completedDate",
            "baseName": "completedDate",
            "type": "Date"
        },
        {
            "name": "completePercentage",
            "baseName": "completePercentage",
            "type": "number"
        },
        {
            "name": "payload",
            "baseName": "payload",
            "type": "object"
        }    ];

    static getAttributeTypeMap() {
        return TaskDto.attributeTypeMap;
    }
}

export namespace TaskDto {
    export enum ActionEnum {
        ItemCreate = <any> 'item/create',
        ItemSuspend = <any> 'item/suspend',
        ItemUnsuspend = <any> 'item/unsuspend',
        ItemRenew = <any> 'item/renew',
        ItemCancel = <any> 'item/cancel',
        ItemDelete = <any> 'item/delete',
        ItemUpgrade = <any> 'item/upgrade',
        ItemUpdate = <any> 'item/update',
        ItemDowngrade = <any> 'item/downgrade',
        DomainCreate = <any> 'domain/create',
        DomainLock = <any> 'domain/lock',
        DomainUnlock = <any> 'domain/unlock',
        DomainRenew = <any> 'domain/renew',
        DomainBundleAdd = <any> 'domain/bundle/add',
        DomainBundleRemove = <any> 'domain/bundle/remove',
        DomainInfo = <any> 'domain/info',
        DomainRecall = <any> 'domain/recall',
        DomainTransferCheck = <any> 'domain/transfer/check',
        DomainTransferCancel = <any> 'domain/transfer/cancel',
        DomainTransferAccept = <any> 'domain/transfer/accept',
        DomainSendAuthCode = <any> 'domain/send-auth-code',
        DomainCheckAvailability = <any> 'domain/check-availability',
        DomainShieldActivate = <any> 'domain/shield/activate',
        DomainShieldDeactivate = <any> 'domain/shield/deactivate',
        DomainDelete = <any> 'domain/delete',
        DomainContactsInfo = <any> 'domain/contacts/info',
        DomainContactsCreate = <any> 'domain/contacts/create',
        DomainContactsUpdate = <any> 'domain/contacts/update',
        DomainContactsDelete = <any> 'domain/contacts/delete',
        DomainContactsRegistrant = <any> 'domain/contacts/registrant',
        DomainContactsAdmin = <any> 'domain/contacts/admin',
        DomainContactsTech = <any> 'domain/contacts/tech',
        DomainContactsBilling = <any> 'domain/contacts/billing',
        DomainResendVerificationEmail = <any> 'domain/resend-verification-email',
        DomainCheckClaims = <any> 'domain/check-claims',
        DomainModifyHosts = <any> 'domain/modify-hosts',
        DomainModifyAuthcode = <any> 'domain/modify-authcode',
        DomainGetTransferStatus = <any> 'domain/get-transfer-status',
        DomainCancelTransfer = <any> 'domain/cancel-transfer',
        DomainRequestTransferAway = <any> 'domain/request-transfer-away',
        DomainRequestTransfer = <any> 'domain/request-transfer',
        DomainCompleteTransferAway = <any> 'domain/complete-transfer-away',
        DomainRejectTransferAway = <any> 'domain/reject-transfer-away',
        DomainRejectTransferExpired = <any> 'domain/reject-transfer-expired'
    }
    export enum StatusEnum {
        Pending = <any> 'PENDING',
        InProgress = <any> 'IN_PROGRESS',
        Completed = <any> 'COMPLETED',
        Canceled = <any> 'CANCELED'
    }
    export enum IntegrationHandlerEnum {
        InvoiceSuccess = <any> 'INVOICE.SUCCESS',
        ItemCreate = <any> 'ITEM.CREATE',
        ItemUpgrade = <any> 'ITEM.UPGRADE',
        ItemDowngrade = <any> 'ITEM.DOWNGRADE',
        ItemRenew = <any> 'ITEM.RENEW',
        ItemSuspend = <any> 'ITEM.SUSPEND',
        ItemUnsuspend = <any> 'ITEM.UNSUSPEND',
        ItemInstall = <any> 'ITEM.INSTALL',
        ItemUninstall = <any> 'ITEM.UNINSTALL',
        ProductCreate = <any> 'PRODUCT.CREATE',
        ProductUpdate = <any> 'PRODUCT.UPDATE',
        ProductDelete = <any> 'PRODUCT.DELETE',
        ProductSuspend = <any> 'PRODUCT.SUSPEND',
        ProductUnsuspend = <any> 'PRODUCT.UNSUSPEND',
        ProductRenew = <any> 'PRODUCT.RENEW',
        ProductUpgrade = <any> 'PRODUCT.UPGRADE',
        ProductDowngrade = <any> 'PRODUCT.DOWNGRADE'
    }
}
