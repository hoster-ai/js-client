/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { InvoiceContactDto } from './invoiceContactDto';
import { ItemDto } from './itemDto';
import { PricesDto } from './pricesDto';

export class OrderDto {
    /**
    * Unique Identifier of order
    */
    'id'?: string;
    /**
    * Auto-incremented order identifier
    */
    'orderNumber': number;
    /**
    * Information about the invoice contact for this order.
    */
    'invoiceContact': InvoiceContactDto;
    /**
    * Identifier of the user associated with this order.
    */
    'userId'?: string;
    /**
    * Identifier of the coupon used for this order.
    */
    'couponId'?: string;
    /**
    * The current status of the order.
    */
    'orderStatus'?: OrderDto.OrderStatusEnum = OrderDto.OrderStatusEnum.Pending;
    /**
    * Array of payment IDs associated with this order.
    */
    'paymentIds': Array<string>;
    /**
    * Array of items included in this order.
    */
    'lines': Array<ItemDto>;
    /**
    * The invoice status associated with the specific order
    */
    'orderInvoiceStatus'?: OrderDto.OrderInvoiceStatusEnum;
    /**
    * Summary information about the order\'s prices and costs.
    */
    'summary': PricesDto;
    /**
    * Indicates whether credits were used for this order.
    */
    'useCredits'?: boolean;
    /**
    * Log information related to the order.
    */
    'logs'?: string;
    /**
    * Timestamp indicating when the order was created.
    */
    'createdAt'?: Date;
    /**
    * Timestamp indicating when the order was last updated.
    */
    'updatedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "orderNumber",
            "baseName": "orderNumber",
            "type": "number"
        },
        {
            "name": "invoiceContact",
            "baseName": "invoiceContact",
            "type": "InvoiceContactDto"
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string"
        },
        {
            "name": "couponId",
            "baseName": "couponId",
            "type": "string"
        },
        {
            "name": "orderStatus",
            "baseName": "orderStatus",
            "type": "OrderDto.OrderStatusEnum"
        },
        {
            "name": "paymentIds",
            "baseName": "paymentIds",
            "type": "Array<string>"
        },
        {
            "name": "lines",
            "baseName": "lines",
            "type": "Array<ItemDto>"
        },
        {
            "name": "orderInvoiceStatus",
            "baseName": "orderInvoiceStatus",
            "type": "OrderDto.OrderInvoiceStatusEnum"
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "PricesDto"
        },
        {
            "name": "useCredits",
            "baseName": "useCredits",
            "type": "boolean"
        },
        {
            "name": "logs",
            "baseName": "logs",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return OrderDto.attributeTypeMap;
    }
}

export namespace OrderDto {
    export enum OrderStatusEnum {
        Pending = <any> 'PENDING',
        InProgress = <any> 'IN_PROGRESS',
        Completed = <any> 'COMPLETED',
        Canceled = <any> 'CANCELED',
        Refunded = <any> 'REFUNDED'
    }
    export enum OrderInvoiceStatusEnum {
        Pending = <any> 'PENDING',
        Success = <any> 'SUCCESS'
    }
}
