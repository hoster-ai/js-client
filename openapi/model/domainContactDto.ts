/**
 * Hoster API
 * Hosting automation. The easy way
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ContactAdditionalDto } from './contactAdditionalDto';

export class DomainContactDto {
    /**
    * The unique identifier of the contact.
    */
    'id'?: string;
    /**
    * A custom code associated with the contact.
    */
    'contactCode'?: string;
    /**
    * The identifier of the integration associated with this contact.
    */
    'integrationId'?: string;
    /**
    * The first name of the contact.
    */
    'firstName': string;
    /**
    * The last name of the contact.
    */
    'lastName': string;
    /**
    * The contact’s company or organization name.
    */
    'organization'?: string;
    /**
    * The first line of the contact\'s address.
    */
    'street1': string;
    /**
    * The second line of the contact\'s address.
    */
    'street2'?: string;
    /**
    * The third line of the contact\'s address.
    */
    'street3'?: string;
    /**
    * The contact\'s city.,Required string with max length 250 chars
    */
    'city': string;
    /**
    * The contact’s State or Province.
    */
    'state': string;
    /**
    * The contact\'s Zip Code or Postal Code.
    */
    'postcode': string;
    /**
    * The ISO 3166-1-alpha-2 code for the country of the contact.
    */
    'countryCode': DomainContactDto.CountryCodeEnum;
    /**
    * The Telephone number of the contact. +<InternationalDialingCode>.<TelephoneNumber>
    */
    'telephone': string;
    /**
    * The Fax number of the contact. +<InternationalDialingCode>.<TelephoneNumber>
    */
    'fax'?: string;
    /**
    * The contact\'s Email Address.
    */
    'email': string;
    /**
    * The type of contact.
    */
    'contactType'?: DomainContactDto.ContactTypeEnum;
    /**
    * Additional data associated with the contact.
    */
    'additional'?: ContactAdditionalDto;
    /**
    * The date and time when the contact was created.
    */
    'createdAt'?: Date;
    /**
    * The date and time when the contact was last updated.
    */
    'updatedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "contactCode",
            "baseName": "contactCode",
            "type": "string"
        },
        {
            "name": "integrationId",
            "baseName": "integrationId",
            "type": "string"
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string"
        },
        {
            "name": "organization",
            "baseName": "organization",
            "type": "string"
        },
        {
            "name": "street1",
            "baseName": "street1",
            "type": "string"
        },
        {
            "name": "street2",
            "baseName": "street2",
            "type": "string"
        },
        {
            "name": "street3",
            "baseName": "street3",
            "type": "string"
        },
        {
            "name": "city",
            "baseName": "city",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string"
        },
        {
            "name": "postcode",
            "baseName": "postcode",
            "type": "string"
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "DomainContactDto.CountryCodeEnum"
        },
        {
            "name": "telephone",
            "baseName": "telephone",
            "type": "string"
        },
        {
            "name": "fax",
            "baseName": "fax",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "contactType",
            "baseName": "contactType",
            "type": "DomainContactDto.ContactTypeEnum"
        },
        {
            "name": "additional",
            "baseName": "additional",
            "type": "ContactAdditionalDto"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return DomainContactDto.attributeTypeMap;
    }
}

export namespace DomainContactDto {
    export enum CountryCodeEnum {
        Af = <any> 'AF',
        Al = <any> 'AL',
        Dz = <any> 'DZ',
        As = <any> 'AS',
        Ad = <any> 'AD',
        Ao = <any> 'AO',
        Ai = <any> 'AI',
        Aq = <any> 'AQ',
        Ag = <any> 'AG',
        Ar = <any> 'AR',
        Am = <any> 'AM',
        Aw = <any> 'AW',
        Au = <any> 'AU',
        At = <any> 'AT',
        Az = <any> 'AZ',
        Bs = <any> 'BS',
        Bh = <any> 'BH',
        Bd = <any> 'BD',
        Bb = <any> 'BB',
        By = <any> 'BY',
        Be = <any> 'BE',
        Bz = <any> 'BZ',
        Bj = <any> 'BJ',
        Bm = <any> 'BM',
        Bt = <any> 'BT',
        Bo = <any> 'BO',
        Bq = <any> 'BQ',
        Ba = <any> 'BA',
        Bw = <any> 'BW',
        Bv = <any> 'BV',
        Br = <any> 'BR',
        Io = <any> 'IO',
        Bn = <any> 'BN',
        Bg = <any> 'BG',
        Bf = <any> 'BF',
        Bi = <any> 'BI',
        Kh = <any> 'KH',
        Cm = <any> 'CM',
        Ca = <any> 'CA',
        Cv = <any> 'CV',
        Ky = <any> 'KY',
        Cf = <any> 'CF',
        Td = <any> 'TD',
        Cl = <any> 'CL',
        Cn = <any> 'CN',
        Cx = <any> 'CX',
        Cc = <any> 'CC',
        Co = <any> 'CO',
        Km = <any> 'KM',
        Cg = <any> 'CG',
        Cd = <any> 'CD',
        Ck = <any> 'CK',
        Cr = <any> 'CR',
        Ci = <any> 'CI',
        Hr = <any> 'HR',
        Cu = <any> 'CU',
        Cw = <any> 'CW',
        Cy = <any> 'CY',
        Cz = <any> 'CZ',
        Dk = <any> 'DK',
        Dj = <any> 'DJ',
        Dm = <any> 'DM',
        Do = <any> 'DO',
        Ec = <any> 'EC',
        Eg = <any> 'EG',
        Sv = <any> 'SV',
        Gq = <any> 'GQ',
        Er = <any> 'ER',
        Ee = <any> 'EE',
        Et = <any> 'ET',
        Fk = <any> 'FK',
        Fo = <any> 'FO',
        Fj = <any> 'FJ',
        Fi = <any> 'FI',
        Fr = <any> 'FR',
        Gf = <any> 'GF',
        Pf = <any> 'PF',
        Tf = <any> 'TF',
        Ga = <any> 'GA',
        Gm = <any> 'GM',
        Ge = <any> 'GE',
        De = <any> 'DE',
        Gh = <any> 'GH',
        Gi = <any> 'GI',
        Gr = <any> 'GR',
        Gl = <any> 'GL',
        Gd = <any> 'GD',
        Gp = <any> 'GP',
        Gu = <any> 'GU',
        Gt = <any> 'GT',
        Gg = <any> 'GG',
        Gn = <any> 'GN',
        Gw = <any> 'GW',
        Gy = <any> 'GY',
        Ht = <any> 'HT',
        Hm = <any> 'HM',
        Va = <any> 'VA',
        Hn = <any> 'HN',
        Hk = <any> 'HK',
        Hu = <any> 'HU',
        Is = <any> 'IS',
        In = <any> 'IN',
        Id = <any> 'ID',
        Ir = <any> 'IR',
        Iq = <any> 'IQ',
        Ie = <any> 'IE',
        Im = <any> 'IM',
        Il = <any> 'IL',
        It = <any> 'IT',
        Jm = <any> 'JM',
        Jp = <any> 'JP',
        Je = <any> 'JE',
        Jo = <any> 'JO',
        Kz = <any> 'KZ',
        Ke = <any> 'KE',
        Ki = <any> 'KI',
        Kp = <any> 'KP',
        Kr = <any> 'KR',
        Kw = <any> 'KW',
        Kg = <any> 'KG',
        La = <any> 'LA',
        Lv = <any> 'LV',
        Lb = <any> 'LB',
        Ls = <any> 'LS',
        Lr = <any> 'LR',
        Ly = <any> 'LY',
        Li = <any> 'LI',
        Lt = <any> 'LT',
        Lu = <any> 'LU',
        Mo = <any> 'MO',
        Mk = <any> 'MK',
        Mg = <any> 'MG',
        Mw = <any> 'MW',
        My = <any> 'MY',
        Mv = <any> 'MV',
        Ml = <any> 'ML',
        Mt = <any> 'MT',
        Mh = <any> 'MH',
        Mq = <any> 'MQ',
        Mr = <any> 'MR',
        Mu = <any> 'MU',
        Tn = <any> 'TN',
        Tr = <any> 'TR',
        Tm = <any> 'TM',
        Tc = <any> 'TC',
        Tv = <any> 'TV',
        Ug = <any> 'UG',
        Ua = <any> 'UA',
        Ae = <any> 'AE',
        Gb = <any> 'GB',
        Us = <any> 'US',
        Um = <any> 'UM',
        Uy = <any> 'UY',
        Uz = <any> 'UZ',
        Vu = <any> 'VU',
        Ve = <any> 'VE',
        Vn = <any> 'VN',
        Vg = <any> 'VG',
        Vi = <any> 'VI',
        Wf = <any> 'WF',
        Eh = <any> 'EH',
        Ye = <any> 'YE',
        Zm = <any> 'ZM',
        Zw = <any> 'ZW',
        Yt = <any> 'YT',
        Mx = <any> 'MX',
        Fm = <any> 'FM',
        Md = <any> 'MD',
        Mc = <any> 'MC',
        Mn = <any> 'MN',
        Me = <any> 'ME',
        Ms = <any> 'MS',
        Ma = <any> 'MA',
        Mz = <any> 'MZ',
        Mm = <any> 'MM',
        Na = <any> 'NA',
        Nr = <any> 'NR',
        Np = <any> 'NP',
        Nl = <any> 'NL',
        Nc = <any> 'NC',
        Nz = <any> 'NZ',
        Ni = <any> 'NI',
        Ne = <any> 'NE',
        Ng = <any> 'NG',
        Nu = <any> 'NU',
        Nf = <any> 'NF',
        Mp = <any> 'MP',
        No = <any> 'NO',
        Om = <any> 'OM',
        Pk = <any> 'PK',
        Pw = <any> 'PW',
        Ps = <any> 'PS',
        Pa = <any> 'PA',
        Pg = <any> 'PG',
        Py = <any> 'PY',
        Pe = <any> 'PE',
        Ph = <any> 'PH',
        Pn = <any> 'PN',
        Pl = <any> 'PL',
        Pt = <any> 'PT',
        Pr = <any> 'PR',
        Qa = <any> 'QA',
        Re = <any> 'RE',
        Ro = <any> 'RO',
        Ru = <any> 'RU',
        Rw = <any> 'RW',
        Bl = <any> 'BL',
        Sh = <any> 'SH',
        Kn = <any> 'KN',
        Lc = <any> 'LC',
        Mf = <any> 'MF',
        Pm = <any> 'PM',
        Vc = <any> 'VC',
        Ws = <any> 'WS',
        Sm = <any> 'SM',
        St = <any> 'ST',
        Sa = <any> 'SA',
        Sn = <any> 'SN',
        Rs = <any> 'RS',
        Sc = <any> 'SC',
        Sl = <any> 'SL',
        Sg = <any> 'SG',
        Sx = <any> 'SX',
        Sk = <any> 'SK',
        Si = <any> 'SI',
        Sb = <any> 'SB',
        So = <any> 'SO',
        Za = <any> 'ZA',
        Gs = <any> 'GS',
        Ss = <any> 'SS',
        Es = <any> 'ES',
        Lk = <any> 'LK',
        Sd = <any> 'SD',
        Sr = <any> 'SR',
        Sj = <any> 'SJ',
        Sz = <any> 'SZ',
        Se = <any> 'SE',
        Ch = <any> 'CH',
        Sy = <any> 'SY',
        Tw = <any> 'TW',
        Tj = <any> 'TJ',
        Tz = <any> 'TZ',
        Th = <any> 'TH',
        Tl = <any> 'TL',
        Tg = <any> 'TG',
        Tk = <any> 'TK',
        To = <any> 'TO',
        Tt = <any> 'TT'
    }
    export enum ContactTypeEnum {
        Admin = <any> 'ADMIN',
        Billing = <any> 'BILLING',
        Tech = <any> 'TECH',
        Registrant = <any> 'REGISTRANT'
    }
}
